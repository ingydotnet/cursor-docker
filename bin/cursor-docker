#!/usr/bin/env bash

set -euo pipefail

help() (
  cat <<'...'
Usage: cursor-docker [options] [repo]

Options:
  --start         Start the container (default)
  --stop          Stop the container
  --restart       Restart the container
  --rebuild       Rebuild the container image
  -h, --help      Show this help message
  -v, --version   Show the version

...
)

main() (
  init

  if [[ ${1-} == -* ]]; then
    action "$@"
    exit
  fi

  [[ $# -gt 0 ]] || set -- "$(pwd -P)"

  setup "$@"; shift

  cd "$repo" ||
    die "Failed to cd to repo: $repo"

  export CURSOR_DOCKER_DOCKERFILE=$root/Dockerfile
  export CURSOR_DOCKER_ARGS="$*"

  make -e -f "$root/Makefile" start "$@"
)

action() (
  action=$1; shift
  [[ $# -gt 0 ]] || set -- "$(pwd -P)"

  case $action in
    -h|--help)
      help
      exit
      ;;
    -v|--version)
      make --no-print-directory -f "$root/Makefile" version
      exit
      ;;
    --start)
      make -e -f "$root/Makefile" start
      ;;
    --stop)
      make -e -f "$root/Makefile" stop
      ;;
    --restart)
      make -e -f "$root/Makefile" stop start
      ;;
    --rebuild)
      make -e -f "$root/Makefile" stop
      rm -fr "$gitdir/.ext"
      cursor-docker "$@"
      ;;
    *)
      die "Unknown action flag: $1";;
  esac
)

init() {
  [[ ${CURSOR_DOCKER_ROOT:-} ]] ||
    die 'CURSOR_DOCKER_ROOT is not set' \
        'Try: source /path/to/cursor-docker/.rc'
  root=$CURSOR_DOCKER_ROOT
}

setup() {
  [[ -d $root ]] ||
    die "CURSOR_DOCKER_ROOT is not a directory: $root"
  { [[ -f $root/Makefile ]] &&
    [[ -f $root/Dockerfile ]]
  } || die "CURSOR_DOCKER_ROOT is not the cursor-docker project: $root"

  repo=$1
  [[ $repo ]] ||
    die 'No repo directory provided'
  [[ -d $repo ]] ||
    die "Repo directory does not exist: $repo"
  gitdir=$(cd "$repo" && git rev-parse --git-common-dir 2>/dev/null)
  [[ $gitdir ]] ||
    die "Repo is not a git repository: $repo"
  [[ -d $gitdir ]] ||
    die "Git directory does not exist: $gitdir"
  [[ $gitdir == *.git && -d $gitdir ]] ||
    die "Git directory is not a git repository: $gitdir"
  repo=$(cd "$repo" && pwd -P)
  gitdir=$(cd "$gitdir" && pwd -P)
}

die() {
  local msg=${1:-' died'}; shift
  msg="Error: $msg"
  printf '%s\n' "$msg" "$@" >&2
  exit 1
}

main "$@"
